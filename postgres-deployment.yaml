apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: postgres
    spec:
      initContainers:
        - name: init-postgres
          image: busybox
          command: ['sh', '-c', 'rm -rf /var/lib/postgresql/data/*']
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-db-volume
        - name: init-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 999:999 /var/lib/postgresql/data']
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-db-volume
      containers:
        - args:
            - postgres
            - -c
            - log_statement=ddl
          env:
            - name: POSTGRES_DB
              value: airflow
            - name: POSTGRES_HOST_AUTH_METHOD
              value: scram-sha-256
            - name: POSTGRES_INITDB_ARGS
              value: --auth-host=scram-sha-256
            - name: POSTGRES_PASSWORD
              value: airflow
            - name: POSTGRES_ROOT_PASSWORD
              value: Asdo@123
            - name: POSTGRES_USER
              value: airflow
          image: airflow090820.azurecr.io/postgres:13
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - airflow
            failureThreshold: 5
            initialDelaySeconds: 30  # increased initial delay
            periodSeconds: 10
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-db-volume
          securityContext:
            runAsUser: 999  # postgres user ID
            runAsGroup: 999  # postgres group ID
      restartPolicy: Always
      volumes:
        - name: postgres-db-volume
          persistentVolumeClaim:
            claimName: postgres-db-volume
