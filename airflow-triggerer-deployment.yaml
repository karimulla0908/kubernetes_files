apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-triggerer
  labels:
    io.kompose.service: airflow-triggerer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow-triggerer
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: airflow-triggerer
    spec:
      initContainers:
        - name: init-clear-plugins
          image: busybox
      containers:
        - name: airflow-triggerer
          image: airflow090820.azurecr.io/my_airflow_custom_image:latest
          args:
            - triggerer
          env:
            - name: AIRFLOW__API__AUTH_BACKENDS
              value: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
            - name: AIRFLOW__CELERY__BROKER_URL
              value: "redis://:@redis:6379/0"
            - name: AIRFLOW__CELERY__RESULT_BACKEND
              value: "db+postgresql://airflow:airflow@postgres/airflow"
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: "True"
            - name: AIRFLOW__CORE__EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW__CORE__FERNET_KEY
              value: "42oAR66FqGYr0S9IwNDUNERL78yYvRZO-tv2Y5sQE4c="
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "False"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
            - name: AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL
              value: "300"
            - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
              value: "true"
            - name: PYTHONASYNCIODEBUG
              value: "1"
            - name: donot_pickle
              value: "True"
          livenessProbe:
          volumeMounts:
            - mountPath: /opt/airflow/
              name: airflow-claim0
            - mountPath: /opt/airflow/plugins
              name: airflow-claim1
            - mountPath: /opt/airflow/logs
              name: airflow-claim0
          securityContext:
            runAsUser: 0  # Run the container as root user
            runAsGroup: 0
      restartPolicy: Always
      volumes:
        - name: airflow-claim0
          persistentVolumeClaim:
            claimName: airflow-claim0
        - name: airflow-claim1
          persistentVolumeClaim:
            claimName: airflow-claim1